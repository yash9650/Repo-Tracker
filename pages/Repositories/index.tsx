import Head from "next/head";
import React from "react";
import {
  GetServerSideProps,
  GetStaticPaths,
  GetStaticProps,
  NextPage,
} from "next";
import CustomCard from "../../components/common/CustomCard";
import AddNewRepositoryForm from "../../components/Repositories/AddNewRepositoryForm";
import { IRepo } from "../../models/Repository";
import { Card } from "react-bootstrap";
import moment from "moment";
import { useRouter } from "next/router";
import appAxios from "../../axios/AppAxios";

const RepositoriesPage: NextPage<{
  repoList: IRepo[];
}> = (props) => {
  const router = useRouter();
  return (
    <>
      <Head>
        <title>Repo Tracker</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="container">
        {props.repoList.map((repo, index) => (
          <CustomCard key={index}>
            <div className="custom-card-container">
              <div
                className="custom-card-body"
                onClick={() => {
                  router.push(`/Repositories/${repo._id}`);
                }}
              >
                <Card.Title>{repo.repoName}</Card.Title>

                <Card.Text>
                  <b>Created at: </b>
                  {moment(repo.createdAt).format("LL")}
                </Card.Text>
              </div>
              <div className="card-btn-container">
                <button
                  className="btn btn-primary fs-small"
                  onClick={(event) => {
                    event.stopPropagation();
                  }}
                >
                  edit
                </button>
                <br />
                <button
                  className="btn btn-danger fs-small"
                  onClick={(event) => {}}
                >
                  del
                </button>
              </div>
            </div>
          </CustomCard>
        ))}
      </div>
      <AddNewRepositoryForm />
    </>
  );
};

export const getStaticProps: GetStaticProps = async (context) => {
  try {
    const repoResponse = await fetch("http://localhost:3000/api/repositories");
    const repoList = await repoResponse.json();
    return {
      props: {
        repoList,
      },
    };
  } catch (error) {
    console.log(error);
  }
  return {
    props: {
      repoList: [],
    },
  };
};

// export const getServerSideProps: GetServerSideProps = async (context) => {
//   // const user = await appAxios({
//   //   url: "/api/auth/register",
//   //    method: "POST",
//   //   data: {
//   //     username: "test",
//   //     password: "password",
//   //     role: "admin",
//   //   },
//   // });
//   try {
//     const user = await appAxios({
//       url: "/api/auth/login",
//       method: "POST",
//       data: {
//         username: "testt",
//         password: "password2",
//         role: "admin",
//       },
//     });
//     console.log(user.data);
//   } catch (error) {
//     console.log(error.response.data.error);
//   }

//   return {
//     props: {
//       repoList: [],
//     },
//   };
// };

export default RepositoriesPage;
